//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18449.
// 
#pragma warning disable 1591

namespace SpringHealthOne.SpringWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_ISMARTwebservice", Namespace="http://smart.springer-mps.com/service")]
    public partial class SMARTService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback PubMedSearchResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArticleDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetASavedSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForgottenLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeactivateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertFavouritesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFavouriteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFavouritesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSavedSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSavedSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSavedSearchesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DrugsOperationCompleted;
        
        private System.Threading.SendOrPostCallback JournalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DevicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback IndicationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback TherapyAreasOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManufacturersOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicSearchSummaryResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdvancedSearchSummaryResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoggedOutSearchResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoggedInSearchResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertQuoteRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactUsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PubMedSearchSummaryOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SMARTService() {
            this.Url = global::SpringHealthOne.Properties.Settings.Default.SpringHealthOne_SpringWS_SMARTService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event PubMedSearchResultsCompletedEventHandler PubMedSearchResultsCompleted;
        
        /// <remarks/>
        public event GetArticleDetailsCompletedEventHandler GetArticleDetailsCompleted;
        
        /// <remarks/>
        public event GetASavedSearchCompletedEventHandler GetASavedSearchCompleted;
        
        /// <remarks/>
        public event AuthTokenCompletedEventHandler AuthTokenCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event ForgottenLoginCompletedEventHandler ForgottenLoginCompleted;
        
        /// <remarks/>
        public event AccountExistsCompletedEventHandler AccountExistsCompleted;
        
        /// <remarks/>
        public event GetAccountDetailsCompletedEventHandler GetAccountDetailsCompleted;
        
        /// <remarks/>
        public event UpdateAccountDetailsCompletedEventHandler UpdateAccountDetailsCompleted;
        
        /// <remarks/>
        public event InsertAccountCompletedEventHandler InsertAccountCompleted;
        
        /// <remarks/>
        public event DeactivateAccountCompletedEventHandler DeactivateAccountCompleted;
        
        /// <remarks/>
        public event InsertFavouritesCompletedEventHandler InsertFavouritesCompleted;
        
        /// <remarks/>
        public event DeleteFavouriteCompletedEventHandler DeleteFavouriteCompleted;
        
        /// <remarks/>
        public event GetFavouritesCompletedEventHandler GetFavouritesCompleted;
        
        /// <remarks/>
        public event InsertSavedSearchCompletedEventHandler InsertSavedSearchCompleted;
        
        /// <remarks/>
        public event DeleteSavedSearchCompletedEventHandler DeleteSavedSearchCompleted;
        
        /// <remarks/>
        public event GetSavedSearchesCompletedEventHandler GetSavedSearchesCompleted;
        
        /// <remarks/>
        public event DrugsCompletedEventHandler DrugsCompleted;
        
        /// <remarks/>
        public event JournalsCompletedEventHandler JournalsCompleted;
        
        /// <remarks/>
        public event DevicesCompletedEventHandler DevicesCompleted;
        
        /// <remarks/>
        public event IndicationsCompletedEventHandler IndicationsCompleted;
        
        /// <remarks/>
        public event TherapyAreasCompletedEventHandler TherapyAreasCompleted;
        
        /// <remarks/>
        public event ManufacturersCompletedEventHandler ManufacturersCompleted;
        
        /// <remarks/>
        public event CountriesCompletedEventHandler CountriesCompleted;
        
        /// <remarks/>
        public event GetBasicSearchSummaryResultsCompletedEventHandler GetBasicSearchSummaryResultsCompleted;
        
        /// <remarks/>
        public event GetAdvancedSearchSummaryResultsCompletedEventHandler GetAdvancedSearchSummaryResultsCompleted;
        
        /// <remarks/>
        public event GetLoggedOutSearchResultsCompletedEventHandler GetLoggedOutSearchResultsCompleted;
        
        /// <remarks/>
        public event GetLoggedInSearchResultsCompletedEventHandler GetLoggedInSearchResultsCompleted;
        
        /// <remarks/>
        public event InsertQuoteRequestCompletedEventHandler InsertQuoteRequestCompleted;
        
        /// <remarks/>
        public event ContactUsCompletedEventHandler ContactUsCompleted;
        
        /// <remarks/>
        public event PubMedSearchSummaryCompletedEventHandler PubMedSearchSummaryCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/PubMedSearchResults", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PubMedFullResultsType PubMedSearchResults([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] PubMedSummaryResultsType summaryResultsType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string start_row, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string num_rows) {
            object[] results = this.Invoke("PubMedSearchResults", new object[] {
                        key,
                        summaryResultsType,
                        start_row,
                        num_rows});
            return ((PubMedFullResultsType)(results[0]));
        }
        
        /// <remarks/>
        public void PubMedSearchResultsAsync(string key, PubMedSummaryResultsType summaryResultsType, string start_row, string num_rows) {
            this.PubMedSearchResultsAsync(key, summaryResultsType, start_row, num_rows, null);
        }
        
        /// <remarks/>
        public void PubMedSearchResultsAsync(string key, PubMedSummaryResultsType summaryResultsType, string start_row, string num_rows, object userState) {
            if ((this.PubMedSearchResultsOperationCompleted == null)) {
                this.PubMedSearchResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPubMedSearchResultsOperationCompleted);
            }
            this.InvokeAsync("PubMedSearchResults", new object[] {
                        key,
                        summaryResultsType,
                        start_row,
                        num_rows}, this.PubMedSearchResultsOperationCompleted, userState);
        }
        
        private void OnPubMedSearchResultsOperationCompleted(object arg) {
            if ((this.PubMedSearchResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PubMedSearchResultsCompleted(this, new PubMedSearchResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/GetArticleDetails", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ArticleType GetArticleDetails([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string reprintOpprtunityId) {
            object[] results = this.Invoke("GetArticleDetails", new object[] {
                        key,
                        reprintOpprtunityId});
            return ((ArticleType)(results[0]));
        }
        
        /// <remarks/>
        public void GetArticleDetailsAsync(string key, string reprintOpprtunityId) {
            this.GetArticleDetailsAsync(key, reprintOpprtunityId, null);
        }
        
        /// <remarks/>
        public void GetArticleDetailsAsync(string key, string reprintOpprtunityId, object userState) {
            if ((this.GetArticleDetailsOperationCompleted == null)) {
                this.GetArticleDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArticleDetailsOperationCompleted);
            }
            this.InvokeAsync("GetArticleDetails", new object[] {
                        key,
                        reprintOpprtunityId}, this.GetArticleDetailsOperationCompleted, userState);
        }
        
        private void OnGetArticleDetailsOperationCompleted(object arg) {
            if ((this.GetArticleDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArticleDetailsCompleted(this, new GetArticleDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/GetASavedSearch", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SavedSearchType GetASavedSearch([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string searchId) {
            object[] results = this.Invoke("GetASavedSearch", new object[] {
                        key,
                        searchId});
            return ((SavedSearchType)(results[0]));
        }
        
        /// <remarks/>
        public void GetASavedSearchAsync(string key, string searchId) {
            this.GetASavedSearchAsync(key, searchId, null);
        }
        
        /// <remarks/>
        public void GetASavedSearchAsync(string key, string searchId, object userState) {
            if ((this.GetASavedSearchOperationCompleted == null)) {
                this.GetASavedSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetASavedSearchOperationCompleted);
            }
            this.InvokeAsync("GetASavedSearch", new object[] {
                        key,
                        searchId}, this.GetASavedSearchOperationCompleted, userState);
        }
        
        private void OnGetASavedSearchOperationCompleted(object arg) {
            if ((this.GetASavedSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetASavedSearchCompleted(this, new GetASavedSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/AuthToken", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AuthToken() {
            object[] results = this.Invoke("AuthToken", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthTokenAsync() {
            this.AuthTokenAsync(null);
        }
        
        /// <remarks/>
        public void AuthTokenAsync(object userState) {
            if ((this.AuthTokenOperationCompleted == null)) {
                this.AuthTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthTokenOperationCompleted);
            }
            this.InvokeAsync("AuthToken", new object[0], this.AuthTokenOperationCompleted, userState);
        }
        
        private void OnAuthTokenOperationCompleted(object arg) {
            if ((this.AuthTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthTokenCompleted(this, new AuthTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/Login", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Login([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("Login", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string password) {
            this.LoginAsync(username, password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        username,
                        password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/ForgottenLogin", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ForgottenLogin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, out bool ForgottenLoginResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool ForgottenLoginResultSpecified) {
            object[] results = this.Invoke("ForgottenLogin", new object[] {
                        email});
            ForgottenLoginResult = ((bool)(results[0]));
            ForgottenLoginResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void ForgottenLoginAsync(string email) {
            this.ForgottenLoginAsync(email, null);
        }
        
        /// <remarks/>
        public void ForgottenLoginAsync(string email, object userState) {
            if ((this.ForgottenLoginOperationCompleted == null)) {
                this.ForgottenLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForgottenLoginOperationCompleted);
            }
            this.InvokeAsync("ForgottenLogin", new object[] {
                        email}, this.ForgottenLoginOperationCompleted, userState);
        }
        
        private void OnForgottenLoginOperationCompleted(object arg) {
            if ((this.ForgottenLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForgottenLoginCompleted(this, new ForgottenLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/AccountExists", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AccountExists([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, out bool AccountExistsResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AccountExistsResultSpecified) {
            object[] results = this.Invoke("AccountExists", new object[] {
                        username});
            AccountExistsResult = ((bool)(results[0]));
            AccountExistsResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void AccountExistsAsync(string username) {
            this.AccountExistsAsync(username, null);
        }
        
        /// <remarks/>
        public void AccountExistsAsync(string username, object userState) {
            if ((this.AccountExistsOperationCompleted == null)) {
                this.AccountExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountExistsOperationCompleted);
            }
            this.InvokeAsync("AccountExists", new object[] {
                        username}, this.AccountExistsOperationCompleted, userState);
        }
        
        private void OnAccountExistsOperationCompleted(object arg) {
            if ((this.AccountExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountExistsCompleted(this, new AccountExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/GetAccountDetails", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public AccountType GetAccountDetails([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username) {
            object[] results = this.Invoke("GetAccountDetails", new object[] {
                        key,
                        username});
            return ((AccountType)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountDetailsAsync(string key, string username) {
            this.GetAccountDetailsAsync(key, username, null);
        }
        
        /// <remarks/>
        public void GetAccountDetailsAsync(string key, string username, object userState) {
            if ((this.GetAccountDetailsOperationCompleted == null)) {
                this.GetAccountDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountDetailsOperationCompleted);
            }
            this.InvokeAsync("GetAccountDetails", new object[] {
                        key,
                        username}, this.GetAccountDetailsOperationCompleted, userState);
        }
        
        private void OnGetAccountDetailsOperationCompleted(object arg) {
            if ((this.GetAccountDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountDetailsCompleted(this, new GetAccountDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/UpdateAccountDetails", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UpdateAccountDetails([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] AccountType account) {
            object[] results = this.Invoke("UpdateAccountDetails", new object[] {
                        key,
                        account});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAccountDetailsAsync(string key, AccountType account) {
            this.UpdateAccountDetailsAsync(key, account, null);
        }
        
        /// <remarks/>
        public void UpdateAccountDetailsAsync(string key, AccountType account, object userState) {
            if ((this.UpdateAccountDetailsOperationCompleted == null)) {
                this.UpdateAccountDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateAccountDetails", new object[] {
                        key,
                        account}, this.UpdateAccountDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateAccountDetailsOperationCompleted(object arg) {
            if ((this.UpdateAccountDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountDetailsCompleted(this, new UpdateAccountDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/InsertAccount", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InsertAccount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] AccountType account) {
            object[] results = this.Invoke("InsertAccount", new object[] {
                        key,
                        account});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAccountAsync(string key, AccountType account) {
            this.InsertAccountAsync(key, account, null);
        }
        
        /// <remarks/>
        public void InsertAccountAsync(string key, AccountType account, object userState) {
            if ((this.InsertAccountOperationCompleted == null)) {
                this.InsertAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAccountOperationCompleted);
            }
            this.InvokeAsync("InsertAccount", new object[] {
                        key,
                        account}, this.InsertAccountOperationCompleted, userState);
        }
        
        private void OnInsertAccountOperationCompleted(object arg) {
            if ((this.InsertAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAccountCompleted(this, new InsertAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/DeactivateAccount", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DeactivateAccount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username) {
            object[] results = this.Invoke("DeactivateAccount", new object[] {
                        key,
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeactivateAccountAsync(string key, string username) {
            this.DeactivateAccountAsync(key, username, null);
        }
        
        /// <remarks/>
        public void DeactivateAccountAsync(string key, string username, object userState) {
            if ((this.DeactivateAccountOperationCompleted == null)) {
                this.DeactivateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeactivateAccountOperationCompleted);
            }
            this.InvokeAsync("DeactivateAccount", new object[] {
                        key,
                        username}, this.DeactivateAccountOperationCompleted, userState);
        }
        
        private void OnDeactivateAccountOperationCompleted(object arg) {
            if ((this.DeactivateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeactivateAccountCompleted(this, new DeactivateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/InsertFavourites", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InsertFavourites(int userId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool userIdSpecified, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)] int[] reprintOpprtunityIds) {
            object[] results = this.Invoke("InsertFavourites", new object[] {
                        userId,
                        userIdSpecified,
                        reprintOpprtunityIds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertFavouritesAsync(int userId, bool userIdSpecified, int[] reprintOpprtunityIds) {
            this.InsertFavouritesAsync(userId, userIdSpecified, reprintOpprtunityIds, null);
        }
        
        /// <remarks/>
        public void InsertFavouritesAsync(int userId, bool userIdSpecified, int[] reprintOpprtunityIds, object userState) {
            if ((this.InsertFavouritesOperationCompleted == null)) {
                this.InsertFavouritesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertFavouritesOperationCompleted);
            }
            this.InvokeAsync("InsertFavourites", new object[] {
                        userId,
                        userIdSpecified,
                        reprintOpprtunityIds}, this.InsertFavouritesOperationCompleted, userState);
        }
        
        private void OnInsertFavouritesOperationCompleted(object arg) {
            if ((this.InsertFavouritesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertFavouritesCompleted(this, new InsertFavouritesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/DeleteFavourite", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DeleteFavourite(int userId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool userIdSpecified, int reprintOpprtunityIds, [System.Xml.Serialization.XmlIgnoreAttribute()] bool reprintOpprtunityIdsSpecified) {
            object[] results = this.Invoke("DeleteFavourite", new object[] {
                        userId,
                        userIdSpecified,
                        reprintOpprtunityIds,
                        reprintOpprtunityIdsSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFavouriteAsync(int userId, bool userIdSpecified, int reprintOpprtunityIds, bool reprintOpprtunityIdsSpecified) {
            this.DeleteFavouriteAsync(userId, userIdSpecified, reprintOpprtunityIds, reprintOpprtunityIdsSpecified, null);
        }
        
        /// <remarks/>
        public void DeleteFavouriteAsync(int userId, bool userIdSpecified, int reprintOpprtunityIds, bool reprintOpprtunityIdsSpecified, object userState) {
            if ((this.DeleteFavouriteOperationCompleted == null)) {
                this.DeleteFavouriteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFavouriteOperationCompleted);
            }
            this.InvokeAsync("DeleteFavourite", new object[] {
                        userId,
                        userIdSpecified,
                        reprintOpprtunityIds,
                        reprintOpprtunityIdsSpecified}, this.DeleteFavouriteOperationCompleted, userState);
        }
        
        private void OnDeleteFavouriteOperationCompleted(object arg) {
            if ((this.DeleteFavouriteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFavouriteCompleted(this, new DeleteFavouriteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/GetFavourites", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public FullResultsType GetFavourites([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, int userId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool userIdSpecified) {
            object[] results = this.Invoke("GetFavourites", new object[] {
                        key,
                        userId,
                        userIdSpecified});
            return ((FullResultsType)(results[0]));
        }
        
        /// <remarks/>
        public void GetFavouritesAsync(string key, int userId, bool userIdSpecified) {
            this.GetFavouritesAsync(key, userId, userIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetFavouritesAsync(string key, int userId, bool userIdSpecified, object userState) {
            if ((this.GetFavouritesOperationCompleted == null)) {
                this.GetFavouritesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFavouritesOperationCompleted);
            }
            this.InvokeAsync("GetFavourites", new object[] {
                        key,
                        userId,
                        userIdSpecified}, this.GetFavouritesOperationCompleted, userState);
        }
        
        private void OnGetFavouritesOperationCompleted(object arg) {
            if ((this.GetFavouritesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFavouritesCompleted(this, new GetFavouritesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/InsertSavedSearch", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InsertSavedSearch([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string searchName, int userId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool userIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string search_id) {
            object[] results = this.Invoke("InsertSavedSearch", new object[] {
                        searchName,
                        userId,
                        userIdSpecified,
                        search_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSavedSearchAsync(string searchName, int userId, bool userIdSpecified, string search_id) {
            this.InsertSavedSearchAsync(searchName, userId, userIdSpecified, search_id, null);
        }
        
        /// <remarks/>
        public void InsertSavedSearchAsync(string searchName, int userId, bool userIdSpecified, string search_id, object userState) {
            if ((this.InsertSavedSearchOperationCompleted == null)) {
                this.InsertSavedSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSavedSearchOperationCompleted);
            }
            this.InvokeAsync("InsertSavedSearch", new object[] {
                        searchName,
                        userId,
                        userIdSpecified,
                        search_id}, this.InsertSavedSearchOperationCompleted, userState);
        }
        
        private void OnInsertSavedSearchOperationCompleted(object arg) {
            if ((this.InsertSavedSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSavedSearchCompleted(this, new InsertSavedSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/DeleteSavedSearch", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DeleteSavedSearch([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string search_id) {
            object[] results = this.Invoke("DeleteSavedSearch", new object[] {
                        search_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSavedSearchAsync(string search_id) {
            this.DeleteSavedSearchAsync(search_id, null);
        }
        
        /// <remarks/>
        public void DeleteSavedSearchAsync(string search_id, object userState) {
            if ((this.DeleteSavedSearchOperationCompleted == null)) {
                this.DeleteSavedSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSavedSearchOperationCompleted);
            }
            this.InvokeAsync("DeleteSavedSearch", new object[] {
                        search_id}, this.DeleteSavedSearchOperationCompleted, userState);
        }
        
        private void OnDeleteSavedSearchOperationCompleted(object arg) {
            if ((this.DeleteSavedSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSavedSearchCompleted(this, new DeleteSavedSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/GetSavedSearches", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SavedSearchesType GetSavedSearches([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, int userId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool userIdSpecified) {
            object[] results = this.Invoke("GetSavedSearches", new object[] {
                        key,
                        userId,
                        userIdSpecified});
            return ((SavedSearchesType)(results[0]));
        }
        
        /// <remarks/>
        public void GetSavedSearchesAsync(string key, int userId, bool userIdSpecified) {
            this.GetSavedSearchesAsync(key, userId, userIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetSavedSearchesAsync(string key, int userId, bool userIdSpecified, object userState) {
            if ((this.GetSavedSearchesOperationCompleted == null)) {
                this.GetSavedSearchesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSavedSearchesOperationCompleted);
            }
            this.InvokeAsync("GetSavedSearches", new object[] {
                        key,
                        userId,
                        userIdSpecified}, this.GetSavedSearchesOperationCompleted, userState);
        }
        
        private void OnGetSavedSearchesOperationCompleted(object arg) {
            if ((this.GetSavedSearchesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSavedSearchesCompleted(this, new GetSavedSearchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/Drugs", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Drugs([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string filter, int numMatches, [System.Xml.Serialization.XmlIgnoreAttribute()] bool numMatchesSpecified) {
            object[] results = this.Invoke("Drugs", new object[] {
                        filter,
                        numMatches,
                        numMatchesSpecified});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void DrugsAsync(string filter, int numMatches, bool numMatchesSpecified) {
            this.DrugsAsync(filter, numMatches, numMatchesSpecified, null);
        }
        
        /// <remarks/>
        public void DrugsAsync(string filter, int numMatches, bool numMatchesSpecified, object userState) {
            if ((this.DrugsOperationCompleted == null)) {
                this.DrugsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDrugsOperationCompleted);
            }
            this.InvokeAsync("Drugs", new object[] {
                        filter,
                        numMatches,
                        numMatchesSpecified}, this.DrugsOperationCompleted, userState);
        }
        
        private void OnDrugsOperationCompleted(object arg) {
            if ((this.DrugsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DrugsCompleted(this, new DrugsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/Journals", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Journals([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string filter, int numMatches, [System.Xml.Serialization.XmlIgnoreAttribute()] bool numMatchesSpecified) {
            object[] results = this.Invoke("Journals", new object[] {
                        filter,
                        numMatches,
                        numMatchesSpecified});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void JournalsAsync(string filter, int numMatches, bool numMatchesSpecified) {
            this.JournalsAsync(filter, numMatches, numMatchesSpecified, null);
        }
        
        /// <remarks/>
        public void JournalsAsync(string filter, int numMatches, bool numMatchesSpecified, object userState) {
            if ((this.JournalsOperationCompleted == null)) {
                this.JournalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJournalsOperationCompleted);
            }
            this.InvokeAsync("Journals", new object[] {
                        filter,
                        numMatches,
                        numMatchesSpecified}, this.JournalsOperationCompleted, userState);
        }
        
        private void OnJournalsOperationCompleted(object arg) {
            if ((this.JournalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JournalsCompleted(this, new JournalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/Devices", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Devices([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string filter, int numMatches, [System.Xml.Serialization.XmlIgnoreAttribute()] bool numMatchesSpecified) {
            object[] results = this.Invoke("Devices", new object[] {
                        filter,
                        numMatches,
                        numMatchesSpecified});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void DevicesAsync(string filter, int numMatches, bool numMatchesSpecified) {
            this.DevicesAsync(filter, numMatches, numMatchesSpecified, null);
        }
        
        /// <remarks/>
        public void DevicesAsync(string filter, int numMatches, bool numMatchesSpecified, object userState) {
            if ((this.DevicesOperationCompleted == null)) {
                this.DevicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDevicesOperationCompleted);
            }
            this.InvokeAsync("Devices", new object[] {
                        filter,
                        numMatches,
                        numMatchesSpecified}, this.DevicesOperationCompleted, userState);
        }
        
        private void OnDevicesOperationCompleted(object arg) {
            if ((this.DevicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DevicesCompleted(this, new DevicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/Indications", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Indications([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string filter, int numMatches, [System.Xml.Serialization.XmlIgnoreAttribute()] bool numMatchesSpecified) {
            object[] results = this.Invoke("Indications", new object[] {
                        filter,
                        numMatches,
                        numMatchesSpecified});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void IndicationsAsync(string filter, int numMatches, bool numMatchesSpecified) {
            this.IndicationsAsync(filter, numMatches, numMatchesSpecified, null);
        }
        
        /// <remarks/>
        public void IndicationsAsync(string filter, int numMatches, bool numMatchesSpecified, object userState) {
            if ((this.IndicationsOperationCompleted == null)) {
                this.IndicationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIndicationsOperationCompleted);
            }
            this.InvokeAsync("Indications", new object[] {
                        filter,
                        numMatches,
                        numMatchesSpecified}, this.IndicationsOperationCompleted, userState);
        }
        
        private void OnIndicationsOperationCompleted(object arg) {
            if ((this.IndicationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IndicationsCompleted(this, new IndicationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/TherapyAreas", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] TherapyAreas([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string filter, int numMatches, [System.Xml.Serialization.XmlIgnoreAttribute()] bool numMatchesSpecified) {
            object[] results = this.Invoke("TherapyAreas", new object[] {
                        filter,
                        numMatches,
                        numMatchesSpecified});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void TherapyAreasAsync(string filter, int numMatches, bool numMatchesSpecified) {
            this.TherapyAreasAsync(filter, numMatches, numMatchesSpecified, null);
        }
        
        /// <remarks/>
        public void TherapyAreasAsync(string filter, int numMatches, bool numMatchesSpecified, object userState) {
            if ((this.TherapyAreasOperationCompleted == null)) {
                this.TherapyAreasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTherapyAreasOperationCompleted);
            }
            this.InvokeAsync("TherapyAreas", new object[] {
                        filter,
                        numMatches,
                        numMatchesSpecified}, this.TherapyAreasOperationCompleted, userState);
        }
        
        private void OnTherapyAreasOperationCompleted(object arg) {
            if ((this.TherapyAreasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TherapyAreasCompleted(this, new TherapyAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/Manufacturers", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Manufacturers([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string filter, int numMatches, [System.Xml.Serialization.XmlIgnoreAttribute()] bool numMatchesSpecified) {
            object[] results = this.Invoke("Manufacturers", new object[] {
                        filter,
                        numMatches,
                        numMatchesSpecified});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ManufacturersAsync(string filter, int numMatches, bool numMatchesSpecified) {
            this.ManufacturersAsync(filter, numMatches, numMatchesSpecified, null);
        }
        
        /// <remarks/>
        public void ManufacturersAsync(string filter, int numMatches, bool numMatchesSpecified, object userState) {
            if ((this.ManufacturersOperationCompleted == null)) {
                this.ManufacturersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManufacturersOperationCompleted);
            }
            this.InvokeAsync("Manufacturers", new object[] {
                        filter,
                        numMatches,
                        numMatchesSpecified}, this.ManufacturersOperationCompleted, userState);
        }
        
        private void OnManufacturersOperationCompleted(object arg) {
            if ((this.ManufacturersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManufacturersCompleted(this, new ManufacturersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/Countries", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Countries([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string filter, int numMatches, [System.Xml.Serialization.XmlIgnoreAttribute()] bool numMatchesSpecified) {
            object[] results = this.Invoke("Countries", new object[] {
                        filter,
                        numMatches,
                        numMatchesSpecified});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void CountriesAsync(string filter, int numMatches, bool numMatchesSpecified) {
            this.CountriesAsync(filter, numMatches, numMatchesSpecified, null);
        }
        
        /// <remarks/>
        public void CountriesAsync(string filter, int numMatches, bool numMatchesSpecified, object userState) {
            if ((this.CountriesOperationCompleted == null)) {
                this.CountriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountriesOperationCompleted);
            }
            this.InvokeAsync("Countries", new object[] {
                        filter,
                        numMatches,
                        numMatchesSpecified}, this.CountriesOperationCompleted, userState);
        }
        
        private void OnCountriesOperationCompleted(object arg) {
            if ((this.CountriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountriesCompleted(this, new CountriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/GetBasicSearchSummaryResul" +
            "ts", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SummaryResultsType GetBasicSearchSummaryResults(int userID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool userIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string searchTerm, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string monthFromDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string yearFromDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string monthToDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string yearToDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string productType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string journalTitle, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sort_by, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sort_order) {
            object[] results = this.Invoke("GetBasicSearchSummaryResults", new object[] {
                        userID,
                        userIDSpecified,
                        searchTerm,
                        monthFromDate,
                        yearFromDate,
                        monthToDate,
                        yearToDate,
                        productType,
                        journalTitle,
                        sort_by,
                        sort_order});
            return ((SummaryResultsType)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicSearchSummaryResultsAsync(int userID, bool userIDSpecified, string searchTerm, string monthFromDate, string yearFromDate, string monthToDate, string yearToDate, string productType, string journalTitle, string sort_by, string sort_order) {
            this.GetBasicSearchSummaryResultsAsync(userID, userIDSpecified, searchTerm, monthFromDate, yearFromDate, monthToDate, yearToDate, productType, journalTitle, sort_by, sort_order, null);
        }
        
        /// <remarks/>
        public void GetBasicSearchSummaryResultsAsync(int userID, bool userIDSpecified, string searchTerm, string monthFromDate, string yearFromDate, string monthToDate, string yearToDate, string productType, string journalTitle, string sort_by, string sort_order, object userState) {
            if ((this.GetBasicSearchSummaryResultsOperationCompleted == null)) {
                this.GetBasicSearchSummaryResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicSearchSummaryResultsOperationCompleted);
            }
            this.InvokeAsync("GetBasicSearchSummaryResults", new object[] {
                        userID,
                        userIDSpecified,
                        searchTerm,
                        monthFromDate,
                        yearFromDate,
                        monthToDate,
                        yearToDate,
                        productType,
                        journalTitle,
                        sort_by,
                        sort_order}, this.GetBasicSearchSummaryResultsOperationCompleted, userState);
        }
        
        private void OnGetBasicSearchSummaryResultsOperationCompleted(object arg) {
            if ((this.GetBasicSearchSummaryResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicSearchSummaryResultsCompleted(this, new GetBasicSearchSummaryResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/GetAdvancedSearchSummaryRe" +
            "sults", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SummaryResultsType GetAdvancedSearchSummaryResults(
                    int userID, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool userIDSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string searchTerm, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string drug, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string monthFromDate, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string yearFromDate, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string monthToDate, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string yearToDate, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string productType, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string journalTitle, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string articleTitle, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string device, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string indication, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string therapyArea, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string manufacturer, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string author, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string doi, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pubmedId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string citation, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sponsoredBy, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sort_by, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sort_order) {
            object[] results = this.Invoke("GetAdvancedSearchSummaryResults", new object[] {
                        userID,
                        userIDSpecified,
                        searchTerm,
                        drug,
                        monthFromDate,
                        yearFromDate,
                        monthToDate,
                        yearToDate,
                        productType,
                        journalTitle,
                        articleTitle,
                        device,
                        indication,
                        therapyArea,
                        manufacturer,
                        author,
                        doi,
                        pubmedId,
                        citation,
                        sponsoredBy,
                        sort_by,
                        sort_order});
            return ((SummaryResultsType)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdvancedSearchSummaryResultsAsync(
                    int userID, 
                    bool userIDSpecified, 
                    string searchTerm, 
                    string drug, 
                    string monthFromDate, 
                    string yearFromDate, 
                    string monthToDate, 
                    string yearToDate, 
                    string productType, 
                    string journalTitle, 
                    string articleTitle, 
                    string device, 
                    string indication, 
                    string therapyArea, 
                    string manufacturer, 
                    string author, 
                    string doi, 
                    string pubmedId, 
                    string citation, 
                    string sponsoredBy, 
                    string sort_by, 
                    string sort_order) {
            this.GetAdvancedSearchSummaryResultsAsync(userID, userIDSpecified, searchTerm, drug, monthFromDate, yearFromDate, monthToDate, yearToDate, productType, journalTitle, articleTitle, device, indication, therapyArea, manufacturer, author, doi, pubmedId, citation, sponsoredBy, sort_by, sort_order, null);
        }
        
        /// <remarks/>
        public void GetAdvancedSearchSummaryResultsAsync(
                    int userID, 
                    bool userIDSpecified, 
                    string searchTerm, 
                    string drug, 
                    string monthFromDate, 
                    string yearFromDate, 
                    string monthToDate, 
                    string yearToDate, 
                    string productType, 
                    string journalTitle, 
                    string articleTitle, 
                    string device, 
                    string indication, 
                    string therapyArea, 
                    string manufacturer, 
                    string author, 
                    string doi, 
                    string pubmedId, 
                    string citation, 
                    string sponsoredBy, 
                    string sort_by, 
                    string sort_order, 
                    object userState) {
            if ((this.GetAdvancedSearchSummaryResultsOperationCompleted == null)) {
                this.GetAdvancedSearchSummaryResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdvancedSearchSummaryResultsOperationCompleted);
            }
            this.InvokeAsync("GetAdvancedSearchSummaryResults", new object[] {
                        userID,
                        userIDSpecified,
                        searchTerm,
                        drug,
                        monthFromDate,
                        yearFromDate,
                        monthToDate,
                        yearToDate,
                        productType,
                        journalTitle,
                        articleTitle,
                        device,
                        indication,
                        therapyArea,
                        manufacturer,
                        author,
                        doi,
                        pubmedId,
                        citation,
                        sponsoredBy,
                        sort_by,
                        sort_order}, this.GetAdvancedSearchSummaryResultsOperationCompleted, userState);
        }
        
        private void OnGetAdvancedSearchSummaryResultsOperationCompleted(object arg) {
            if ((this.GetAdvancedSearchSummaryResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdvancedSearchSummaryResultsCompleted(this, new GetAdvancedSearchSummaryResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/GetLoggedOutSearchResults", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public FullResultsType GetLoggedOutSearchResults([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string search_id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string num_rows) {
            object[] results = this.Invoke("GetLoggedOutSearchResults", new object[] {
                        key,
                        search_id,
                        num_rows});
            return ((FullResultsType)(results[0]));
        }
        
        /// <remarks/>
        public void GetLoggedOutSearchResultsAsync(string key, string search_id, string num_rows) {
            this.GetLoggedOutSearchResultsAsync(key, search_id, num_rows, null);
        }
        
        /// <remarks/>
        public void GetLoggedOutSearchResultsAsync(string key, string search_id, string num_rows, object userState) {
            if ((this.GetLoggedOutSearchResultsOperationCompleted == null)) {
                this.GetLoggedOutSearchResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoggedOutSearchResultsOperationCompleted);
            }
            this.InvokeAsync("GetLoggedOutSearchResults", new object[] {
                        key,
                        search_id,
                        num_rows}, this.GetLoggedOutSearchResultsOperationCompleted, userState);
        }
        
        private void OnGetLoggedOutSearchResultsOperationCompleted(object arg) {
            if ((this.GetLoggedOutSearchResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoggedOutSearchResultsCompleted(this, new GetLoggedOutSearchResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/GetLoggedInSearchResults", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public FullResultsType GetLoggedInSearchResults([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string search_id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string start_row, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string end_row) {
            object[] results = this.Invoke("GetLoggedInSearchResults", new object[] {
                        key,
                        search_id,
                        start_row,
                        end_row});
            return ((FullResultsType)(results[0]));
        }
        
        /// <remarks/>
        public void GetLoggedInSearchResultsAsync(string key, string search_id, string start_row, string end_row) {
            this.GetLoggedInSearchResultsAsync(key, search_id, start_row, end_row, null);
        }
        
        /// <remarks/>
        public void GetLoggedInSearchResultsAsync(string key, string search_id, string start_row, string end_row, object userState) {
            if ((this.GetLoggedInSearchResultsOperationCompleted == null)) {
                this.GetLoggedInSearchResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoggedInSearchResultsOperationCompleted);
            }
            this.InvokeAsync("GetLoggedInSearchResults", new object[] {
                        key,
                        search_id,
                        start_row,
                        end_row}, this.GetLoggedInSearchResultsOperationCompleted, userState);
        }
        
        private void OnGetLoggedInSearchResultsOperationCompleted(object arg) {
            if ((this.GetLoggedInSearchResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoggedInSearchResultsCompleted(this, new GetLoggedInSearchResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/InsertQuoteRequest", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InsertQuoteRequest(int userId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool userIdSpecified, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/SMARTservice")] QuoteRequestType[] requests) {
            object[] results = this.Invoke("InsertQuoteRequest", new object[] {
                        userId,
                        userIdSpecified,
                        requests});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertQuoteRequestAsync(int userId, bool userIdSpecified, QuoteRequestType[] requests) {
            this.InsertQuoteRequestAsync(userId, userIdSpecified, requests, null);
        }
        
        /// <remarks/>
        public void InsertQuoteRequestAsync(int userId, bool userIdSpecified, QuoteRequestType[] requests, object userState) {
            if ((this.InsertQuoteRequestOperationCompleted == null)) {
                this.InsertQuoteRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertQuoteRequestOperationCompleted);
            }
            this.InvokeAsync("InsertQuoteRequest", new object[] {
                        userId,
                        userIdSpecified,
                        requests}, this.InsertQuoteRequestOperationCompleted, userState);
        }
        
        private void OnInsertQuoteRequestOperationCompleted(object arg) {
            if ((this.InsertQuoteRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertQuoteRequestCompleted(this, new InsertQuoteRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/ContactUs", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContactUs([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ContactUsType request) {
            object[] results = this.Invoke("ContactUs", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ContactUsAsync(ContactUsType request) {
            this.ContactUsAsync(request, null);
        }
        
        /// <remarks/>
        public void ContactUsAsync(ContactUsType request, object userState) {
            if ((this.ContactUsOperationCompleted == null)) {
                this.ContactUsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactUsOperationCompleted);
            }
            this.InvokeAsync("ContactUs", new object[] {
                        request}, this.ContactUsOperationCompleted, userState);
        }
        
        private void OnContactUsOperationCompleted(object arg) {
            if ((this.ContactUsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactUsCompleted(this, new ContactUsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smart.springer-mps.com/service/ISMARTwebservice/PubMedSearchSummary", RequestNamespace="http://smart.springer-mps.com/service", ResponseNamespace="http://smart.springer-mps.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PubMedSummaryResultsType PubMedSearchSummary([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string search_id) {
            object[] results = this.Invoke("PubMedSearchSummary", new object[] {
                        key,
                        search_id});
            return ((PubMedSummaryResultsType)(results[0]));
        }
        
        /// <remarks/>
        public void PubMedSearchSummaryAsync(string key, string search_id) {
            this.PubMedSearchSummaryAsync(key, search_id, null);
        }
        
        /// <remarks/>
        public void PubMedSearchSummaryAsync(string key, string search_id, object userState) {
            if ((this.PubMedSearchSummaryOperationCompleted == null)) {
                this.PubMedSearchSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPubMedSearchSummaryOperationCompleted);
            }
            this.InvokeAsync("PubMedSearchSummary", new object[] {
                        key,
                        search_id}, this.PubMedSearchSummaryOperationCompleted, userState);
        }
        
        private void OnPubMedSearchSummaryOperationCompleted(object arg) {
            if ((this.PubMedSearchSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PubMedSearchSummaryCompleted(this, new PubMedSearchSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SMARTservice")]
    public partial class PubMedSummaryResultsType {
        
        private string errMsgField;
        
        private string queryKeyField;
        
        private string webEnvField;
        
        private int numResultsField;
        
        private bool numResultsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ErrMsg {
            get {
                return this.errMsgField;
            }
            set {
                this.errMsgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string QueryKey {
            get {
                return this.queryKeyField;
            }
            set {
                this.queryKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string WebEnv {
            get {
                return this.webEnvField;
            }
            set {
                this.webEnvField = value;
            }
        }
        
        /// <remarks/>
        public int numResults {
            get {
                return this.numResultsField;
            }
            set {
                this.numResultsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numResultsSpecified {
            get {
                return this.numResultsFieldSpecified;
            }
            set {
                this.numResultsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SMARTservice")]
    public partial class ContactUsType {
        
        private string companyField;
        
        private string countryField;
        
        private string emailField;
        
        private string enquiryField;
        
        private string nameField;
        
        private string telephoneField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string enquiry {
            get {
                return this.enquiryField;
            }
            set {
                this.enquiryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string telephone {
            get {
                return this.telephoneField;
            }
            set {
                this.telephoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SMARTservice")]
    public partial class QuoteRequestType {
        
        private System.Nullable<int> articleIdField;
        
        private bool articleIdFieldSpecified;
        
        private string destinationCountryField;
        
        private bool englishLanguageField;
        
        private bool englishLanguageFieldSpecified;
        
        private System.Nullable<int> pubmedIdField;
        
        private bool pubmedIdFieldSpecified;
        
        private string quantitiesField;
        
        private bool quoteForEprintsField;
        
        private bool quoteForEprintsFieldSpecified;
        
        private bool quoteForReprintsField;
        
        private bool quoteForReprintsFieldSpecified;
        
        private bool quoteWithCoversField;
        
        private bool quoteWithCoversFieldSpecified;
        
        private bool quoteWithoutCoversField;
        
        private bool quoteWithoutCoversFieldSpecified;
        
        private string specialRequirementsField;
        
        private bool translatedField;
        
        private bool translatedFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> articleId {
            get {
                return this.articleIdField;
            }
            set {
                this.articleIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool articleIdSpecified {
            get {
                return this.articleIdFieldSpecified;
            }
            set {
                this.articleIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string destinationCountry {
            get {
                return this.destinationCountryField;
            }
            set {
                this.destinationCountryField = value;
            }
        }
        
        /// <remarks/>
        public bool englishLanguage {
            get {
                return this.englishLanguageField;
            }
            set {
                this.englishLanguageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool englishLanguageSpecified {
            get {
                return this.englishLanguageFieldSpecified;
            }
            set {
                this.englishLanguageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> pubmedId {
            get {
                return this.pubmedIdField;
            }
            set {
                this.pubmedIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pubmedIdSpecified {
            get {
                return this.pubmedIdFieldSpecified;
            }
            set {
                this.pubmedIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string quantities {
            get {
                return this.quantitiesField;
            }
            set {
                this.quantitiesField = value;
            }
        }
        
        /// <remarks/>
        public bool quoteForEprints {
            get {
                return this.quoteForEprintsField;
            }
            set {
                this.quoteForEprintsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool quoteForEprintsSpecified {
            get {
                return this.quoteForEprintsFieldSpecified;
            }
            set {
                this.quoteForEprintsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool quoteForReprints {
            get {
                return this.quoteForReprintsField;
            }
            set {
                this.quoteForReprintsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool quoteForReprintsSpecified {
            get {
                return this.quoteForReprintsFieldSpecified;
            }
            set {
                this.quoteForReprintsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool quoteWithCovers {
            get {
                return this.quoteWithCoversField;
            }
            set {
                this.quoteWithCoversField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool quoteWithCoversSpecified {
            get {
                return this.quoteWithCoversFieldSpecified;
            }
            set {
                this.quoteWithCoversFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool quoteWithoutCovers {
            get {
                return this.quoteWithoutCoversField;
            }
            set {
                this.quoteWithoutCoversField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool quoteWithoutCoversSpecified {
            get {
                return this.quoteWithoutCoversFieldSpecified;
            }
            set {
                this.quoteWithoutCoversFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string specialRequirements {
            get {
                return this.specialRequirementsField;
            }
            set {
                this.specialRequirementsField = value;
            }
        }
        
        /// <remarks/>
        public bool translated {
            get {
                return this.translatedField;
            }
            set {
                this.translatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool translatedSpecified {
            get {
                return this.translatedFieldSpecified;
            }
            set {
                this.translatedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SMARTservice")]
    public partial class ContentType {
        
        private string stringValueField;
        
        private int numResultsField;
        
        private bool numResultsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string StringValue {
            get {
                return this.stringValueField;
            }
            set {
                this.stringValueField = value;
            }
        }
        
        /// <remarks/>
        public int numResults {
            get {
                return this.numResultsField;
            }
            set {
                this.numResultsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numResultsSpecified {
            get {
                return this.numResultsFieldSpecified;
            }
            set {
                this.numResultsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://smart.springer-mps.com/service")]
    public partial class SummaryResultsType {
        
        private ContentType[] contentTypeResultsField;
        
        private int numResultsField;
        
        private bool numResultsFieldSpecified;
        
        private string search_idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/SMARTservice")]
        public ContentType[] contentTypeResults {
            get {
                return this.contentTypeResultsField;
            }
            set {
                this.contentTypeResultsField = value;
            }
        }
        
        /// <remarks/>
        public int numResults {
            get {
                return this.numResultsField;
            }
            set {
                this.numResultsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numResultsSpecified {
            get {
                return this.numResultsFieldSpecified;
            }
            set {
                this.numResultsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string search_id {
            get {
                return this.search_idField;
            }
            set {
                this.search_idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SMARTservice")]
    public partial class SavedSearchesType {
        
        private int numResultsField;
        
        private bool numResultsFieldSpecified;
        
        private SavedSearchType[] savedSearchResultsField;
        
        /// <remarks/>
        public int numResults {
            get {
                return this.numResultsField;
            }
            set {
                this.numResultsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numResultsSpecified {
            get {
                return this.numResultsFieldSpecified;
            }
            set {
                this.numResultsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public SavedSearchType[] savedSearchResults {
            get {
                return this.savedSearchResultsField;
            }
            set {
                this.savedSearchResultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SMARTservice")]
    public partial class SavedSearchType {
        
        private string authorField;
        
        private string articleTitleField;
        
        private string citationField;
        
        private string deviceField;
        
        private string doiField;
        
        private string drugField;
        
        private string fromDateField;
        
        private string indicationField;
        
        private string journalTitleField;
        
        private string manufacturerField;
        
        private string productTypeField;
        
        private string pubmedIdField;
        
        private string searchDateField;
        
        private string searchIdField;
        
        private string searchNameField;
        
        private string searchTermField;
        
        private string sortByField;
        
        private string sortOrderField;
        
        private string sponsoredByField;
        
        private string therapyAreaField;
        
        private string toDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string articleTitle {
            get {
                return this.articleTitleField;
            }
            set {
                this.articleTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string citation {
            get {
                return this.citationField;
            }
            set {
                this.citationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string device {
            get {
                return this.deviceField;
            }
            set {
                this.deviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string doi {
            get {
                return this.doiField;
            }
            set {
                this.doiField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string drug {
            get {
                return this.drugField;
            }
            set {
                this.drugField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fromDate {
            get {
                return this.fromDateField;
            }
            set {
                this.fromDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string indication {
            get {
                return this.indicationField;
            }
            set {
                this.indicationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string journalTitle {
            get {
                return this.journalTitleField;
            }
            set {
                this.journalTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string productType {
            get {
                return this.productTypeField;
            }
            set {
                this.productTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string pubmedId {
            get {
                return this.pubmedIdField;
            }
            set {
                this.pubmedIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string searchDate {
            get {
                return this.searchDateField;
            }
            set {
                this.searchDateField = value;
            }
        }
        
        /// <remarks/>
        public string searchId {
            get {
                return this.searchIdField;
            }
            set {
                this.searchIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string searchName {
            get {
                return this.searchNameField;
            }
            set {
                this.searchNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string searchTerm {
            get {
                return this.searchTermField;
            }
            set {
                this.searchTermField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sortBy {
            get {
                return this.sortByField;
            }
            set {
                this.sortByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sortOrder {
            get {
                return this.sortOrderField;
            }
            set {
                this.sortOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sponsoredBy {
            get {
                return this.sponsoredByField;
            }
            set {
                this.sponsoredByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string therapyArea {
            get {
                return this.therapyAreaField;
            }
            set {
                this.therapyAreaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string toDate {
            get {
                return this.toDateField;
            }
            set {
                this.toDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SMARTservice")]
    public partial class FullResultsType {
        
        private ArticleType[] contentTypeResultsField;
        
        private int numResultsField;
        
        private bool numResultsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public ArticleType[] contentTypeResults {
            get {
                return this.contentTypeResultsField;
            }
            set {
                this.contentTypeResultsField = value;
            }
        }
        
        /// <remarks/>
        public int numResults {
            get {
                return this.numResultsField;
            }
            set {
                this.numResultsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numResultsSpecified {
            get {
                return this.numResultsFieldSpecified;
            }
            set {
                this.numResultsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SMARTservice")]
    public partial class ArticleType {
        
        private string pDFlinkField;
        
        private string abstractTextField;
        
        private int articleIdField;
        
        private bool articleIdFieldSpecified;
        
        private string articleTitleField;
        
        private string authorsField;
        
        private string citationField;
        
        private string journalTitleField;
        
        private string keySentenceField;
        
        private string publicationDateField;
        
        private int reprintOpprtunityIdField;
        
        private bool reprintOpprtunityIdFieldSpecified;
        
        private string therapyAreaField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PDFlink {
            get {
                return this.pDFlinkField;
            }
            set {
                this.pDFlinkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string abstractText {
            get {
                return this.abstractTextField;
            }
            set {
                this.abstractTextField = value;
            }
        }
        
        /// <remarks/>
        public int articleId {
            get {
                return this.articleIdField;
            }
            set {
                this.articleIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool articleIdSpecified {
            get {
                return this.articleIdFieldSpecified;
            }
            set {
                this.articleIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string articleTitle {
            get {
                return this.articleTitleField;
            }
            set {
                this.articleTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string authors {
            get {
                return this.authorsField;
            }
            set {
                this.authorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string citation {
            get {
                return this.citationField;
            }
            set {
                this.citationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string journalTitle {
            get {
                return this.journalTitleField;
            }
            set {
                this.journalTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string keySentence {
            get {
                return this.keySentenceField;
            }
            set {
                this.keySentenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string publicationDate {
            get {
                return this.publicationDateField;
            }
            set {
                this.publicationDateField = value;
            }
        }
        
        /// <remarks/>
        public int reprintOpprtunityId {
            get {
                return this.reprintOpprtunityIdField;
            }
            set {
                this.reprintOpprtunityIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reprintOpprtunityIdSpecified {
            get {
                return this.reprintOpprtunityIdFieldSpecified;
            }
            set {
                this.reprintOpprtunityIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string therapyArea {
            get {
                return this.therapyAreaField;
            }
            set {
                this.therapyAreaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SMARTservice")]
    public partial class TermType {
        
        private string qualifierField;
        
        private string termField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string qualifier {
            get {
                return this.qualifierField;
            }
            set {
                this.qualifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string term {
            get {
                return this.termField;
            }
            set {
                this.termField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SMARTservice")]
    public partial class AccountType {
        
        private string addressField;
        
        private TermType[] areasOfInterestField;
        
        private bool contentAdminField;
        
        private bool contentAdminFieldSpecified;
        
        private string countryField;
        
        private string emailField;
        
        private bool emailServiceField;
        
        private bool emailServiceFieldSpecified;
        
        private string firstnameField;
        
        private string jobTitleField;
        
        private string organisationField;
        
        private string passwordField;
        
        private string processStatusField;
        
        private string surnameField;
        
        private string telephoneField;
        
        private int userIdField;
        
        private bool userIdFieldSpecified;
        
        private string usernameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public TermType[] areasOfInterest {
            get {
                return this.areasOfInterestField;
            }
            set {
                this.areasOfInterestField = value;
            }
        }
        
        /// <remarks/>
        public bool contentAdmin {
            get {
                return this.contentAdminField;
            }
            set {
                this.contentAdminField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool contentAdminSpecified {
            get {
                return this.contentAdminFieldSpecified;
            }
            set {
                this.contentAdminFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public bool emailService {
            get {
                return this.emailServiceField;
            }
            set {
                this.emailServiceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool emailServiceSpecified {
            get {
                return this.emailServiceFieldSpecified;
            }
            set {
                this.emailServiceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string jobTitle {
            get {
                return this.jobTitleField;
            }
            set {
                this.jobTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string organisation {
            get {
                return this.organisationField;
            }
            set {
                this.organisationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string processStatus {
            get {
                return this.processStatusField;
            }
            set {
                this.processStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string surname {
            get {
                return this.surnameField;
            }
            set {
                this.surnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string telephone {
            get {
                return this.telephoneField;
            }
            set {
                this.telephoneField = value;
            }
        }
        
        /// <remarks/>
        public int userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool userIdSpecified {
            get {
                return this.userIdFieldSpecified;
            }
            set {
                this.userIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SMARTservice")]
    public partial class PubMedArticleType {
        
        private string pMIDField;
        
        private string abstractTextField;
        
        private string articleTitleField;
        
        private string authorsField;
        
        private string journalTitleField;
        
        private string publicationDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PMID {
            get {
                return this.pMIDField;
            }
            set {
                this.pMIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string abstractText {
            get {
                return this.abstractTextField;
            }
            set {
                this.abstractTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string articleTitle {
            get {
                return this.articleTitleField;
            }
            set {
                this.articleTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string authors {
            get {
                return this.authorsField;
            }
            set {
                this.authorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string journalTitle {
            get {
                return this.journalTitleField;
            }
            set {
                this.journalTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string publicationDate {
            get {
                return this.publicationDateField;
            }
            set {
                this.publicationDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SMARTservice")]
    public partial class PubMedFullResultsType {
        
        private PubMedArticleType[] contentTypeResultsField;
        
        private int numResultsField;
        
        private bool numResultsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public PubMedArticleType[] contentTypeResults {
            get {
                return this.contentTypeResultsField;
            }
            set {
                this.contentTypeResultsField = value;
            }
        }
        
        /// <remarks/>
        public int numResults {
            get {
                return this.numResultsField;
            }
            set {
                this.numResultsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numResultsSpecified {
            get {
                return this.numResultsFieldSpecified;
            }
            set {
                this.numResultsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PubMedSearchResultsCompletedEventHandler(object sender, PubMedSearchResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PubMedSearchResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PubMedSearchResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PubMedFullResultsType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PubMedFullResultsType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetArticleDetailsCompletedEventHandler(object sender, GetArticleDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArticleDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArticleDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArticleType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArticleType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetASavedSearchCompletedEventHandler(object sender, GetASavedSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetASavedSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetASavedSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SavedSearchType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SavedSearchType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AuthTokenCompletedEventHandler(object sender, AuthTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ForgottenLoginCompletedEventHandler(object sender, ForgottenLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForgottenLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForgottenLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool ForgottenLoginResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool ForgottenLoginResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AccountExistsCompletedEventHandler(object sender, AccountExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool AccountExistsResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AccountExistsResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAccountDetailsCompletedEventHandler(object sender, GetAccountDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateAccountDetailsCompletedEventHandler(object sender, UpdateAccountDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAccountDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAccountDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InsertAccountCompletedEventHandler(object sender, InsertAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeactivateAccountCompletedEventHandler(object sender, DeactivateAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeactivateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeactivateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InsertFavouritesCompletedEventHandler(object sender, InsertFavouritesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertFavouritesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertFavouritesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteFavouriteCompletedEventHandler(object sender, DeleteFavouriteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFavouriteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFavouriteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFavouritesCompletedEventHandler(object sender, GetFavouritesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFavouritesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFavouritesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FullResultsType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FullResultsType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InsertSavedSearchCompletedEventHandler(object sender, InsertSavedSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSavedSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSavedSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteSavedSearchCompletedEventHandler(object sender, DeleteSavedSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSavedSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSavedSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSavedSearchesCompletedEventHandler(object sender, GetSavedSearchesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSavedSearchesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSavedSearchesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SavedSearchesType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SavedSearchesType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DrugsCompletedEventHandler(object sender, DrugsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DrugsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DrugsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void JournalsCompletedEventHandler(object sender, JournalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class JournalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal JournalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DevicesCompletedEventHandler(object sender, DevicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DevicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DevicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IndicationsCompletedEventHandler(object sender, IndicationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IndicationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IndicationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TherapyAreasCompletedEventHandler(object sender, TherapyAreasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TherapyAreasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TherapyAreasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ManufacturersCompletedEventHandler(object sender, ManufacturersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ManufacturersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ManufacturersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CountriesCompletedEventHandler(object sender, CountriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBasicSearchSummaryResultsCompletedEventHandler(object sender, GetBasicSearchSummaryResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicSearchSummaryResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicSearchSummaryResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SummaryResultsType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SummaryResultsType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAdvancedSearchSummaryResultsCompletedEventHandler(object sender, GetAdvancedSearchSummaryResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdvancedSearchSummaryResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdvancedSearchSummaryResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SummaryResultsType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SummaryResultsType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLoggedOutSearchResultsCompletedEventHandler(object sender, GetLoggedOutSearchResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoggedOutSearchResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoggedOutSearchResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FullResultsType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FullResultsType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLoggedInSearchResultsCompletedEventHandler(object sender, GetLoggedInSearchResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoggedInSearchResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoggedInSearchResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FullResultsType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FullResultsType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InsertQuoteRequestCompletedEventHandler(object sender, InsertQuoteRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertQuoteRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertQuoteRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ContactUsCompletedEventHandler(object sender, ContactUsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactUsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactUsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PubMedSearchSummaryCompletedEventHandler(object sender, PubMedSearchSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PubMedSearchSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PubMedSearchSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PubMedSummaryResultsType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PubMedSummaryResultsType)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591